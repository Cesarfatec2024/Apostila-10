-- Active: 1714478331554@@127.0.0.1@5432@20241_fatec_ipi_pbdi_repeticao
DO $$
DECLARE
    vetor INT[] := ARRAY[1, 2, 3];
    matriz INT[] := ARRAY[
        [1, 2, 3],
        [4, 5, 6],
        [7, 8, 9]
    ];
    var_aux INT;
    vet_aux INT[];
BEGIN
    FOREACH vet_aux SLICE 3 IN ARRAY matriz LOOP 
        RAISE NOTICE '%', vet_aux;
    END LOOP;
END;
$$

-- FOREACH
-- DO $$
-- DECLARE
--     valores INT[] := ARRAY[
--         1, 10, 5, 4, 3, 2, 1, 6, 5
--     ];
--     valor INT;
--     soma INT := 0;
-- BEGIN

--     FOREACH valor IN ARRAY valores LOOP
--         RAISE NOTICE 'Valor da vez: %', valor;
--         soma := soma + valor;
--     END LOOP;
--         RAISE NOTICE 'Soma: %', soma;
-- END;
-- $$


-- calculando a média com FOR
-- DO $$
-- DECLARE
--     aluno RECORD;
--     media NUMERIC(10, 2) := 0;
--     total INT;
-- BEGIN
--     FOR aluno IN
--         SELECT * FROM tb_aluno
--     LOOP
--         -- mostrar a nota do aluno atual
--         RAISE NOTICE '%', aluno.nota;
--         -- acumular a média
--         media := media + aluno.nota;
--     END LOOP;
--     -- guardar a quantidade de linhas na variável nota
--     SELECT COUNT(*) FROM tb_aluno INTO total;
--     RAISE NOTICE 'Média: %', media / total;
-- END;
-- $$


-- DO $$
-- BEGIN
--     -- use um for para inserir 10 notas (0 a 10)
--     FOR i IN 1..10 LOOP
--         INSERT INTO tb_aluno (nota) VALUES
--         (valor_aleatorio_entre(0, 10));
--     END LOOP;  
-- END;
-- $$



-- CREATE TABLE tb_aluno(
--     cod_aluno SERIAL PRIMARY KEY,
--     nota INT
-- );



-- for: iterando sobre intervalos
-- DO $$
-- BEGIN
--     RAISE NOTICE 'pulando de um em um...';
--     FOR i IN 1..10 LOOP
--         RAISE NOTICE '%', i;
--     END LOOP;
--     RAISE NOTICE 'E agora? Não mostra nada...';
--     FOR i IN 10..1 LOOP
--         RAISE NOTICE '%', i;
--     END LOOP;
--     RAISE NOTICE 'Agora pulando de um em um ao contrário...';
--     FOR i IN REVERSE 10..1 LOOP
--         RAISE NOTICE '%', i;
--     END LOOP;
--     RAISE NOTICE 'Pular de 1 a 50 de 2 em 2';
--     FOR i IN 1..50 BY 2 LOOP
--         RAISE NOTICE '%', i;
--     END LOOP;
--     RAISE NOTICE 'Pular de 50 a 1 de 2 em 2';
--     FOR i IN REVERSE 50..1 BY 2 LOOP
--         RAISE NOTICE '%', i;
--     END LOOP;
-- END;
-- $$


-- DO $$
-- DECLARE
--     nota INT;
--     media NUMERIC(10, 2) := 0;
--     contador INT := 0;
-- BEGIN
-- -- [-1 a 10]
--     SELECT valor_aleatorio_entre(0, 11) - 1 INTO nota;    
--     WHILE nota >= 0 LOOP
--     -- exibir a nota
--     RAISE NOTICE 'A nota é %', nota;
--     -- acumular o valor gerado na variável média
--     media := media + nota;
--     -- contar mais um
--     contador := contador + 1;
--     -- gerar outro valor, atualizando a variável nota, garantindo a eventual saída
--     SELECT valor_aleatorio_entre(0, 11) - 1 INTO nota;
--     END LOOP;
--     -- se pelo menos uma nota tiver sido gerada, calcular a média
--     IF contador >= 1 THEN
--         media := media / contador;
--         RAISE NOTICE 'Media: %'
--     -- senão, informar que nenhuma nota foi gerada
-- END;
-- $$



-- DO $$
-- DECLARE
--     i INT;
--     j INT;
-- BEGIN
--     i := 0;
--     <<externo>>
--     LOOP
--         i := i + 1;
--         EXIT WHEN i > 10;
--         j := 1;
--         <<interno>>
--         LOOP
--             RAISE NOTICE '% %', i, j;
--             j := j + 1;
--             EXIT WHEN j > 10;
--         --    EXIT externo WHEN j > 5;
--         END LOOP;
--     END LOOP;
-- END;
-- $$


-- -- vejamos como funciona a instrução continue
-- DO $$
-- DECLARE
--     contador INT := 1;
-- BEGIN
--     LOOP
--         contador := contador + 1;
--         EXIT WHEN contador > 100;
--         -- ignorar os valores 11, 22, 33 usando case/then
--         IF contador % 11 = 0 THEN
--             CONTINUE;
--         END IF;
--         CASE contador
--             WHEN 11, 22, 33 THEN
--             CONTINUE;
--         END CASE;
--         -- IF contador % 11 = 0 AND contador < 34 THEN
--         --     -- ignora o restante da interação atual
--         --     CONTINUE;                
--         -- END IF;
--         RAISE NOTICE 'Contador %', contador;
--     END LOOP;
-- END;
-- $$


-- loop simples
-- contando de 1 a 10
-- DO $$
-- DECLARE
--     contador INT := 1;
-- BEGIN
--     LOOP
--         RAISE NOTICE '%', contador;
--         contador := contador + 1;
--         EXIT WHEN contador > 10;
--         -- IF contador > 10 THEN
--         --     EXIT;
--         -- END IF;
--     END LOOP;
-- END;
-- $$






-- Active: 1714478331554@@127.0.0.1@5432
-- CREATE DATABASE "20241_fatec_ipi_pbdi_repeticao";


-- CREATE OR REPLACE FUNCTION valor_aleatorio_entre (lim_inferior INT, lim_superior
-- INT) RETURNS INT AS
-- $$
-- BEGIN
-- RETURN FLOOR(RANDOM() * (lim_superior - lim_inferior + 1) + lim_inferior)::INT;
-- END;
-- $$ LANGUAGE plpgsql;